using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace Examples_ASPNet.Controllers
{
	//   																							  
	//   Это основной ("домашний") Контроллер моего проекта.  										  
	//_______________________________________________________________________________________________
	//   																							  
	//   Контроллеры работают по схеме MVC следующим образом: 
	//   																							  
	//      1. От пользователя/клиента поступает HTTP запрос. 
	//         Он приходит в мой контроллер (через ISS + ASP.Net). 
	//         User >> Controller 
	//   																							  
	//      2. В контроллере я решаю, что "отдать" в клиент, а также
	//         произвожу нужные расчеты/логику. 
	//         Контроллер имеет право "знать" все о Модели и о Видах, с которыми он работает. 
	//   																							  
	//      3. Вид в MVC это шаблон темплейт-движка Razor. 
	//         Вид имеет право "знать" все о Модели, но не имеет права знать логику (кроме 
	//         формирования своей, визуальной структуры). 
	//         Вид может быть подключен к любому Макету (Layout), например общему из папки 
	//         "/Views/Shared/_Layout". Но может и не иметь этой привязки (равен null). 
	//         Также Вид может быть привязан к Модели, с которой работает, но может и не иметь 
	//         такой привязки. Это все уже относится к особенностям работы Razor движка. 
	//   																							  
	//      4. Модель в MVC это просто любой мой класс с данными, которому я могу навесить также 
	//         особые характеристики, которые укажут ASP.Net, как с этими полями данных работать. 
	//         Это включает в себя проверку данных на корректность (валидность) и способы ее 
	//         вывода, если эти данные выводятся в шаблонах. 
	//         Модель не имеет права "знать" ничего ни о Видах, ни о Контроллерах. 
	//_______________________________________________________________________________________________
	//   																							  
	//   В любом контроллере я могу выводить в ответ любую информацию. Либо свой Вид, либо 
	//   могу вывести файл, либо JSON-данные. Для этого используются разные типы в результате
	//   функций вывода:
	//   																							  
	//		 View()  -- для автоматического вывода Вида. Путь к нему определяется автоматом 
	//		            по имени Контроллера и его Функции. Для HomeController и метода Index будет 
	//		            искаться Вид-шаблон из "/Views/Home/Index.cshtml". 
	//		            
	//      View("AnyViewName") -- то же самое, но с указанием конкретного Вида для вывода, который  
	//                             будет искаться в папке "/Views/Home/..." (по имени Контроллера)   
	//   																							  
	//      RedirectToAction("OtherAction")  -- редирект от сервера на другой вид этого контроллера. 
	//   																							  
	//      Json(new int[5] {1, 2, 3, 4, 5}) -- отдача JSON данных 
	//      Json(new {A = "A",  B = 123})
	//      Json(..., JsonRequestBehavior.AllowGet) 
	//   																							  
	//      FileResult (из System.Web.Mvc) -- отдача выборочных данных или файлов (например, изображений) 
	//			FileContentResult
	//			FilePathResult           -- Отдать файл по адресу 
	//			FileStreamResult         -- Отдать данные из потока
	//   																							  
	//      new HttpStatusCodeResult(500)
	//      HttpNotFound()
	//   																							  
	//_______________________________________________________________________________________________
	//   																							  
    public class HomeController : Controller
    {
        // GET: Home
        public ActionResult Index()
        {
            return View();
        }
    }
}

